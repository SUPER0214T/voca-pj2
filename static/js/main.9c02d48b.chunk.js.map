{"version":3,"sources":["components/DayButton.js","components/AddWord.js","components/Word.js","components/DayList.js","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["DayButton","state","useSelector","reducer","history","useHistory","map","el","i","draggable","className","onClick","push","document","querySelectorAll","classList","toggle","addC","AddWord","props","dispatch","useDispatch","useState","eng","setEng","kor","setKor","type","placeholder","onChange","e","target","value","payload","id","vocaReducer","length","day","Number","setAddWordState","Word","toggleState","setToggleState","DayList","useParams","dayList","setDayList","addWordState","useEffect","dayWord","filter","copy","App","localStorage","getItem","initialWordDay","setItem","JSON","stringify","initialDay","wordDays","parse","initialWord","words","to","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firstDay","wordData","store","createStore","combineReducers","action","finalDay","pushFinalDay","splice","copyIndex","findIndex","dayWithWordsRemove","removeDay","console","log","copy2","forEach","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.9c02d48b.chunk.js","sourcesContent":["\r\n\r\nimport React from \"react\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nfunction DayButton() {\r\n  const state = useSelector((state) => state.reducer)\r\n  const history = useHistory();\r\n\r\n  function addC(i) {\r\n    document.querySelectorAll('.dayButton')[i].classList.toggle('hoverEvent')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        state.map((el, i) => {\r\n          return (\r\n            <div draggable=\"true\" key={i} className=\"dayButton\" onClick={() => { history.push(`/day/${el}`); addC(i) }}>\r\n              <span>Day {el}</span>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DayButton;","\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nfunction AddWord(props) {\r\n  const state = useSelector((state) => state)\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  \r\n  const [eng, setEng] = useState('');\r\n  const [kor, setKor] = useState('');\r\n  const [day, setDay] = useState(1);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <section className=\"input-container\">\r\n        <section className=\"input-area\">\r\n          <input type=\"textarea\" placeholder=\"단어\" onChange={(e) => setEng(e.target.value)}/>\r\n        </section>\r\n        <section className=\"input-area\">\r\n          <input type=\"textarea\" placeholder=\"의미\" onChange={(e) => setKor(e.target.value)}/>\r\n        </section>\r\n        <section className=\"input-area\">\r\n        </section>\r\n        <button className=\"uploadBtn\" onClick={() => { dispatch({ type: 'addWord', payload: {id: state.vocaReducer.length, eng: eng, kor: kor, day: Number(props.day)} }); props.setAddWordState(false) }}>저장</button>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddWord;","import { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\n\r\nfunction Word(props) {\r\n  const [toggleState, setToggleState] = useState(true)\r\n  const dispatch = useDispatch();\r\n\r\n  function toggleShow() {\r\n    setToggleState(!toggleState)\r\n  }\r\n\r\n  return (\r\n    <tr className=\"checkbox-container\">\r\n      <td>\r\n        <input className=\"checkbox\" type=\"checkbox\" onClick={() => { document.querySelectorAll('.checkbox-container')[props.i].classList.toggle('off') }}/>\r\n      </td>\r\n      <td className=\"word-text\">{ props.el.eng }</td>\r\n      <td className=\"korWord word-text\">{ toggleState && props.el.kor }</td>\r\n      <td className=\"word-btn-container\"><button className=\"word-btn\" onClick={() => {toggleShow()}}>뜻 보기</button>\r\n      <button className=\"word-btn\" onClick={() => { dispatch({type: 'removeWord', id: props.el.id})}}>삭제</button></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default Word;","/*eslint-disable*/\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport '../App.scss'\r\nimport AddWord from \"./AddWord\";\r\nimport Word from \"./Word\";\r\n\r\n\r\nfunction DayList() {\r\n  const { id } = useParams();\r\n  const state = useSelector((state) => state.vocaReducer);\r\n  const history = useHistory();\r\n\r\n  const [dayList, setDayList] = useState([]);\r\n  const [addWordState, setAddWordState] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    const dayWord = state.filter((el) => el.day === Number(id))\r\n    const copy = [...dayWord]\r\n    setDayList(copy)\r\n  }, [state])\r\n\r\n  return (\r\n    <>\r\n      <table>\r\n        <tbody>\r\n          \r\n          {\r\n            dayList.map((el, i) => {\r\n              return (\r\n                <Word key={i} el={el} i={i} />\r\n              )\r\n            })\r\n          }\r\n        </tbody>\r\n      </table>\r\n      <section>\r\n        <button className=\"add-word-btn\" onClick={() => { setAddWordState(!addWordState) }}>단어 추가</button>\r\n        {\r\n          addWordState ? <AddWord day={id} setAddWordState={setAddWordState}/> : null\r\n        }\r\n        \r\n      </section>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DayList;","/* eslint-disable */\n\nimport React, { useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport './App.scss';\nimport { useDispatch } from \"react-redux\";\nimport DayButton from './components/DayButton';\nimport DayList from './components/DayList';\nimport AddWord from './components/AddWord';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if(localStorage.getItem('wordDays') === null) {\n      const initialWordDay = [1]\n      localStorage.setItem('wordDays', JSON.stringify(initialWordDay))\n      dispatch({type: 'initialDay', initialDay: initialWordDay})\n    } else if(localStorage.getItem('wordDays') === \"[]\" || localStorage.getItem('wordDays') === \"[null]\") {\n      dispatch({type: \"addDay\"});\n    } else {\n      const wordDays = localStorage.getItem('wordDays');\n      const copy = JSON.parse(wordDays);\n      dispatch({type: 'initialDay', initialDay: copy})\n    }\n  }, [])\n\n  useEffect(() => {\n    if(localStorage.getItem('words') === null || localStorage.getItem('words') === \"[]\") {\n      const initialWord = [{id: 0, eng: \"banana\", kor: \"바나나\", day: 1}]\n      localStorage.setItem('words', JSON.stringify(initialWord))\n      dispatch({type: 'initialWord', initialWord: initialWord})\n    } else {\n      const words = JSON.parse(localStorage.getItem('words'))\n      dispatch({type: 'initialWord', initialWord: words})\n    }\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <header className=\"header-container sticky-nav\">\n        <Link to=\"/\" className=\"logo\">메인 화면</Link>\n        <nav className=\"nav\">\n          <section className=\"nav-button-container\">\n            <button className=\"day-button\" onClick={() => { dispatch({ type: \"addDay\" }) }}>DAY 추가</button>\n            <button className=\"nav-button nav-item\" onClick={() => { \n              dispatch({ type: \"removeDay\" });\n              dispatch({ type: \"dayWordsRemove\" });\n             }}>DAY 삭제</button>\n          </section>\n        </nav>\n      </header>\n\n\n      <Switch>\n        <Route path=\"/\" exact>\n          <section className=\"dayButton-container\">\n            <DayButton />\n          </section>\n        </Route>\n\n        <Route path=\"/addWord\">\n          <AddWord />\n        </Route>\n\n        <Route path=\"/day/:id\">\n          <DayList />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\n\r\n// 일단 day 추가할 배열 만들자 - Day 추가 버튼 누르면 배열에 1, 2, 3, 4, 5 .. 이렇게 추가되어야 한다. -> 클릭 누를 때마다 count를 세든 ++를 사용하든\r\n\r\nconst firstDay = [1]\r\nfunction reducer(state = firstDay, action) {\r\n  if(action.type === \"addDay\") {\r\n    if(localStorage.getItem('wordDays') === \"[]\") {\r\n      let initialDay = [1]\r\n      localStorage.setItem('wordDays', JSON.stringify(initialDay));\r\n      return initialDay;\r\n    } else {\r\n      const finalDay = state[state.length - 1]\r\n      const pushFinalDay = finalDay + 1\r\n  \r\n      let copy = [...state]\r\n      copy.push(pushFinalDay)\r\n      localStorage.setItem('wordDays', JSON.stringify(copy))\r\n      return copy;\r\n    }\r\n  } else if(action.type === \"removeDay\") {\r\n    const finalDay = state.length - 1\r\n\r\n    let copy = [...state]\r\n    copy.splice(finalDay, 1)\r\n    localStorage.setItem('wordDays', JSON.stringify(copy))\r\n    return copy\r\n  } else if(action.type === \"initialDay\") {\r\n    let copy = action.initialDay;\r\n    return copy;\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\nconst wordData = [{id: 0, eng: \"banana\", kor: \"바나나\", day: 1}];\r\n\r\nfunction vocaReducer(state = wordData, action) {\r\n  if(action.type === \"addWord\") {\r\n    let copy = [...state];\r\n    copy.push(action.payload)\r\n    localStorage.setItem('words', JSON.stringify(copy))\r\n    return copy;\r\n  } else if(action.type === 'removeWord') {\r\n    let copy = [...state];\r\n    const copyIndex = copy.findIndex((el) => {return Number(el.id) === Number(action.id)})\r\n    copy.splice(copyIndex, 1)\r\n    localStorage.setItem('words', JSON.stringify(copy))\r\n    return copy\r\n  } else if(action.type === 'initialWord') {\r\n    let copy = action.initialWord;\r\n    return copy\r\n  } else if(action.type === \"dayWordsRemove\") {\r\n    let copy = [...state];\r\n    // localStorage의 day 길이 - 1 에 있는 day에 해당하는 단어를 삭제\r\n    let removeDay = JSON.parse(localStorage.getItem('wordDays')).length + 1\r\n    console.log(\"copy: \", copy)\r\n    console.log(\"removeDay: \", removeDay)\r\n    function dayWithWordsRemove(i) {\r\n      copy.splice(i, 1)\r\n    }\r\n\r\n    let copy2 =[]\r\n    copy.forEach((el, i) => {\r\n      if(el.day === removeDay) {\r\n        dayWithWordsRemove(i)\r\n      } else {\r\n        \r\n      }\r\n      copy2 = [...copy]\r\n    })\r\n    localStorage.setItem('words', JSON.stringify(copy2))\r\n    return copy2;\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n\r\nexport { reducer, vocaReducer };","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\nimport { reducer, vocaReducer } from './reducer';\n\n\nconst store = createStore(combineReducers({ reducer, vocaReducer }))\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// 일단 App 페이지 들어갔을 때 localStorage에서 useEffect 써서 데이터 바로 받아온 후에 그걸 reducer에 넣어서 사용"],"sourceRoot":""}